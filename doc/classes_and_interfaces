Rough plan for code implementation

Obstruction interface or abstract class?
// included with Rectangle
* getX/Y & setX/Y
How to see if intersects ball:
        paddle.getBoundsInParent().intersects(myBouncers[k].getBoundsInParent()))

// static variables
* final int - indestructible (-6 or -1)

// instance variables
* remaining hits - int
* reflection multiplier - int (1 for all objects but sand and trampoline blocks)
* color
* height
* width

// public methods
* collision


game.Block abstract class extends Obstruction
// static variables
* final int - indestructible (-6)

// instance variables
* remaining hits - int
* reflection multiplier - int (1 for all objects but sand and trampoline blocks)
* color

// public methods
* collision - decrements remainingHits and updates block color

// private methods
* updateColor


NormalBlock class extends game.Block
// static variables
* final Color alpha
* final Color beta
* final Color gamma


game.Paddle class extends Obstruction
//extra variable
* final moving_speed


game.Ball class extends ImageView
// included with ImageView
* getX/Y and setX/Y

//instance variables
* xVel
* yVel
* image
* damage - usually 1



// instance variables
* reflection multiplier - int